name: Docker Image CI

on:
  schedule:
    - cron: '58 8 * * 1-5'    # Runs at 08:58 every weekday (For EAP).
    - cron: '57 20 * * 1-5'    # Runs at 20:57 every weekday (For GA).
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: false
        description: Confluence version to build ARM supported image for. If not provided, will build for latest EAP or GA version.
      type:
        type: choice
        required: false
        description: If the version is not provided, you can automatically build for the latest EAP or GA Confluence version. Will be ignored if version is provided manually.
        options:
          - EAP
          - GA
      latest:
        type: boolean
        required: false
        default: false
        description: Whether the new image should be tagged as "latest".

jobs:
  get-version:
    name: Get Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Get Latest Version
        id: version
        uses: ./.github/actions/get-version
        with:
          version: ${{ github.event.inputs.version }}
          type: ${{ github.event.inputs.type != '' && github.event.inputs.type || (github.event.schedule == '58 8 * * 1-5' && 'EAP' || 'GA' )}}

  query-image:
    name: Search for Image
    needs: get-version
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.search.outputs.exists }}
    steps:
      - name: Query Docker Hub
        id: search
        run: |
          if curl --silent -f -lSL https://hub.docker.com/v2/repositories/arsm100/confluence-m1/tags/${{ needs.get-version.outputs.version }}; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Image already exists on Docker Hub. Skipping build..."
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Image doesn't exist on Docker Hub. Continuing build..."
          fi

  buildx:
    name: Build and Publish Image
    needs: [ get-version, query-image ]
    if: ${{ needs.query-image.outputs.exists == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull latest changes from upstream repo and submodules
        run: |
          git remote add bitbucket https://bitbucket.org/atlassian-docker/docker-atlassian-confluence-server.git -m master
          git fetch bitbucket master && git merge
          git submodule update --init --remote shared-components/
      - name: Build ARM image and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          build-args: |
            CONFLUENCE_VERSION=${{ needs.get-version.outputs.version }}
          tags: arsm100/confluence-m1:${{ needs.get-version.outputs.version }}${{ (github.event.inputs.latest == 'true' || github.event.schedule == '57 20 * * 1-5') && ',arsm100/confluence-m1:latest' || ''}}
          platforms: linux/arm64/v8
          cache-from: type=gha
          cache-to: type=gha